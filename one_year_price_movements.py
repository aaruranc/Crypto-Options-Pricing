import requests
import datetime
import operator
import csv
import pandas as pd
from pathlib import Path

def append_price_movements(assetCSV, prices):
    csv_file = open(assetCSV)
    r = csv.reader(csv_file)
    row0 = next(r)
    row0.append("1 Day Movement")
    row0.append("2 Day Movement")
    row0.append("7 Day Movement")
    row0.append("14 Day Movement")
    row0.append("1 Month Movement")
    row0.append("2 Month Movement")
    row0.append("6 Month Movement")
    row0.append("1 Year Movement")
    row0.append("1 Day % Change")
    row0.append("2 Day % Change")
    row0.append("7 Day % Change")
    row0.append("14 Day % Change")
    row0.append("1 Month % Change")
    row0.append("2 Month % Change")
    row0.append("6 Month % Change")
    row0.append("1 Year % Change")

    counter = 0
    rows_to_write = [row0]
    for row in r:
        if counter == 1:
            row.append((prices[counter] - prices[counter - 1]))
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
        elif 2 <= counter < 7:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
        elif 7 <= counter < 14:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append('')
        elif 14 <= counter < 30:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append((prices[counter] - prices[counter - 14]))
            row.append('')
            row.append('')
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append(((prices[counter] - prices[counter - 14]) / prices[counter - 14]) * 100)
            row.append('')
            row.append('')
            row.append('')
            row.append('')
        elif 30 <= counter < 60:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append((prices[counter] - prices[counter - 14]))
            row.append((prices[counter] - prices[counter - 30]))
            row.append('')
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append(((prices[counter] - prices[counter - 14]) / prices[counter - 14]) * 100)
            row.append(((prices[counter] - prices[counter - 30]) / prices[counter - 30]) * 100)
            row.append('')
            row.append('')
            row.append('')
        elif 60 <= counter < 180:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append((prices[counter] - prices[counter - 14]))
            row.append((prices[counter] - prices[counter - 30]))
            row.append((prices[counter] - prices[counter - 60]))
            row.append('')
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append(((prices[counter] - prices[counter - 14]) / prices[counter - 14]) * 100)
            row.append(((prices[counter] - prices[counter - 30]) / prices[counter - 30]) * 100)
            row.append(((prices[counter] - prices[counter - 60]) / prices[counter - 60]) * 100)
            row.append('')
            row.append('')
        elif 180 <= counter < 365:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append((prices[counter] - prices[counter - 14]))
            row.append((prices[counter] - prices[counter - 30]))
            row.append((prices[counter] - prices[counter - 60]))
            row.append((prices[counter] - prices[counter - 180]))
            row.append('')
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append(((prices[counter] - prices[counter - 14]) / prices[counter - 14]) * 100)
            row.append(((prices[counter] - prices[counter - 30]) / prices[counter - 30]) * 100)
            row.append(((prices[counter] - prices[counter - 60]) / prices[counter - 60]) * 100)
            row.append(((prices[counter] - prices[counter - 180]) / prices[counter - 180]) * 100)
            row.append('')
        elif counter >= 365:
            row.append((prices[counter] - prices[counter - 1]))
            row.append((prices[counter] - prices[counter - 2]))
            row.append((prices[counter] - prices[counter - 7]))
            row.append((prices[counter] - prices[counter - 14]))
            row.append((prices[counter] - prices[counter - 30]))
            row.append((prices[counter] - prices[counter - 60]))
            row.append((prices[counter] - prices[counter - 180]))
            row.append((prices[counter] - prices[counter - 365]))
            row.append(((prices[counter] - prices[counter - 1]) / prices[counter - 1]) * 100)
            row.append(((prices[counter] - prices[counter - 2]) / prices[counter - 2]) * 100)
            row.append(((prices[counter] - prices[counter - 7]) / prices[counter - 7]) * 100)
            row.append(((prices[counter] - prices[counter - 14]) / prices[counter - 14]) * 100)
            row.append(((prices[counter] - prices[counter - 30]) / prices[counter - 30]) * 100)
            row.append(((prices[counter] - prices[counter - 60]) / prices[counter - 60]) * 100)
            row.append(((prices[counter] - prices[counter - 180]) / prices[counter - 180]) * 100)
            row.append(((prices[counter] - prices[counter - 365]) / prices[counter - 365]) * 100)
        rows_to_write.append(row)
        counter = counter + 1
    out = open(assetCSV, 'w')
    csv_out = csv.writer(out)
    csv_out.writerows(rows_to_write)


def get_array_of_prices(assetCSV):
    df = pd.read_csv(assetCSV)
    dates = df.Date
    prices = df.Price
    return prices


def price_movements(assetCSV):
    prices = get_array_of_prices(assetCSV)
    print(prices)
    append_price_movements(assetCSV, prices)
